apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: taiga
  annotations:
    kompose.cmd: ./kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: taiga-back
  name: taiga-back
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: taiga-back
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.network/taiga: "true"
        io.kompose.service: taiga-back
    spec:
      containers:
        - env:
            - name: ENABLE_TELEMETRY
              value: "False"
            - name: POSTGRES_DB
              value: taiga
            - name: POSTGRES_HOST
              value: taiga-db
            - name: POSTGRES_PASSWORD
              value: taiga
            - name: POSTGRES_USER
              value: taiga
            - name: RABBITMQ_PASS
              value: taiga
            - name: RABBITMQ_USER
              value: taiga
            - name: TAIGA_SECRET_KEY
              value: taiga-back-secret-key
            - name: TAIGA_SITES_DOMAIN
              value: 10.1.3.53
            - name: TAIGA_SITES_SCHEME
              value: http
            - name: TAIGA_SUBPATH
            - name: SESSION_COOKIE_SECURE
              value: "False"
            - name: CSRF_COOKIE_SECURE
              value: "False"
          image: taigaio/taiga-back:latest
          name: taiga-back
          resources: {}
          volumeMounts:
            - mountPath: /taiga-back/static
              name: taiga-static-data
            - mountPath: /taiga-back/media
              name: taiga-media-data
      restartPolicy: Always
      volumes:
        - name: taiga-static-data
          persistentVolumeClaim:
            claimName: taiga-static-data
        - name: taiga-media-data
          persistentVolumeClaim:
            claimName: taiga-media-data
status: {}
